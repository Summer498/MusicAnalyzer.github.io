declare type ISearchQueries = Record<string, unknown>;
export interface ISystem {
    stringIsBlanck(): any;
    stringIsBlank(e: any): any;
    typeOf(e: any): any;
    __showDebugLog__: boolean;
    __showErrorLog__: boolean;
    __showLicense__: boolean;
    get currentClockTime(): number;
    get defaultAppServerEndpoint(): string;
    get defaultAppServerHost(): string;
    set defaultAppServerHost(value: string);
    get defaultAppServerProtocol(): string;
    set defaultAppServerProtocol(value: string);
    get defaultLogServerEndpoint(): string;
    get defaultLogServerHost(): string;
    set defaultLogServerHost(value: string);
    get defaultLogServerProtocol(): string;
    set defaultLogServerProtocol(value: string);
    get defaultWebsocketServerEndpoint(): string;
    get defaultWebsocketServerHost(): string;
    set defaultWebsocketServerHost(value: string);
    get defaultWebsocketServerProtocol(): string;
    set defaultWebsocketServerProtocol(value: string);
    get global(): Window;
    get isStandalone(): boolean;
    get isWebBrowser(): boolean;
    get language(): string;
    get referer(): string;
    get searchQueries(): ISearchQueries;
    get showDebugLog(): boolean;
    set showDebugLog(value: boolean);
    get showErrorLog(): boolean;
    set showErrorLog(value: boolean);
    get showLicense(): boolean;
    set showLicense(value: boolean);
    get userAgent(): string;
    get userAgentIsAndroid(): boolean;
    get userAgentIsLaptop(): boolean;
    get userAgentIsMobile(): boolean;
    get userAgentIsiOS(): boolean;
}
export {};
